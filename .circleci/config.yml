# This config was automatically generated from your source code
# Stacks detected: deps:node:server
version: 2.1
orbs:
  node: circleci/node@5

jobs:
  # Install dependencies and run tests
  build_test:
    docker:
      - image: circleci/node:latest
    # install-deps:
    #   executor: node-executor
    steps:
      - checkout
      - run:
          name: Install Backend Dependencies
          command: cd server && npm install --save
      - run:
          name: Install Frontend Dependencies
          command: cd client && npm install --save
      - persist_to_workspace:
          root: .
          paths:
            - server/node_modules/
            - client/node_modules/

  build_docker_image:
    docker:
      - image: circleci/node:5
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Build Docker Image
          command: |
            docker build -t borgir-app -t borgir-app:latest .
            docker push borgir-app:latest

workflows:
  build_test:
    jobs:
      - build_test
      - build_docker_image

  # test-backend:
  #   executor: node-executor
  #   steps:
  #     - attach_workspace:
  #         at: .
  #     - run:
  #         name: Run Backend Tests
  #         command: cd server && npm test --passWithNoTests

  # test-frontend:
  #   executor: node-executor
  #   steps:
  #     - attach_workspace:
  #         at: .
  #     - run:
  #         name: Run Frontend Tests
  #         command: cd client && npm test --passWithNoTests

  # deploy-backend:
  #   executor: node-executor
  #   steps:
  #     - attach_workspace:
  #         at: .
  #     - run:
  #         name: Deploy Backend to Railway
  #         command: npm run start

  # deploy-frontend:
  #   executor: node-executor
  #   steps:
  #     - attach_workspace:
  #         at: .
  #     - run:
  #         name: Deploy Frontend to Vercel
  #         command: |
  #           npm install -g vercel
  #           vercel --token $VERCEL_TOKEN --prod
# workflows:
#   build-and-test:
#     jobs:
#       - test-node
# - deploy:
#     requires:
#       - test-node
# ! EXAMPLE config.yml FILE USING DOCKER IMAGES
# version: 2.1

# jobs:
#   deploy:
#     docker:
#       - image: arvindr226/alpine-ssh
#     steps:
#       - run: ssh -oStrictHostKeyChecking=no -v $USER@$DNS "./deploy.sh"

# workflows:
#   deploy-to-ec2:
#     jobs:
#       - deploy
